//program showing 
//1.constructor overloading
//2.defining class member functions outside class (using classname::functionname)
//3.objects as function arguments

#include<iostream>
using namespace std;
/////////////////////////
class Distance
{
	private:
		int feet;
		float inches;
	public:
		Distance() : feet(0),inches(0.0)
		{}
		Distance(int ft, float ins) : feet(ft),inches(ins)
		{}
		void getdist()
		{
			cout<<"Enter feet : ";
			cin>>feet;
			cout<<"\nEnter inches : ";
			cin>>inches;

			}
		void showdist()
		{
			cout<<"Feet : "<<feet;
			cout<<"\nInches : "<<inches;
		}
		void adddist(Distance, Distance);


};

/////////////////////////
void Distance::adddist(Distance d1, Distance d2)
{
	inches = d2.inches + d1.inches;
	feet=0;
	if(inches>=12.0){
		inches-=12.0;
		feet++;
	}
	feet=feet+d2.feet+d1.feet;


}
int main(){
	Distance dist1,dist2(11,6.45),dist3;
	dist1.getdist();
	dist3.adddist(dist1,dist2);
	cout<<"\ndist1 ";
	dist1.showdist();
	cout<<"\ndist2 ";
	dist2.showdist();	
	cout<<"\ndist3 ";
	dist3.showdist();

}
